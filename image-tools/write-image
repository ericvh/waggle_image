#!/bin/bash

log() {
    echo -e "\033[34m$(date +'%Y/%m/%d %H:%M:%S') - $*\033[0m"
}

fatal() {
    >&2 echo -e "\033[31m$(date +'%Y/%m/%d %H:%M:%S') - $*\033[0m"
    exit 1
}

usage() {
    cat << EOF
usage: $0 model basedir device

model must be 'nc' or 'ep'.

basedir must be a directory of the form:

basedir/
    boot/               <- boot partition contents
    root/               <- root partition contents
    rw/                 <- rw partition contents
EOF
    exit 1
}

partition_name() {
    if [ -z "$1" ] || [ -z "$2" ]; then
      fatal "error: partition_name requires a target device and partition number"
    fi

    if [ -e "$1$2" ]; then
        echo "$1$2"
    elif [ -e "$1p$2" ]; then
        echo "$1p$2"
    else
        fatal "error: no matching partition"
    fi
}

make_c1_partitions() {
  if [ -z "$1" ]; then
    fatal "error: make_partitions requires a target device"
  fi

  dd if=/dev/zero of="$1" bs=1M count=100
  sync

  sleep 3

  parted --script "$1" mklabel msdos

  parted --script "$1" mkpart primary fat16 3072s 266239s
  parted --script "$1" set 1 lba off

  parted --script "$1" mkpart primary ext4 266240s 15624191s
  parted --script "$1" mkpart primary ext4 15624192s 100%

  sleep 3

  # See https://wiki.odroid.com/odroid-c1/os_images/ubuntu/minimal for ext4 options.
  # Appears to solve the unsupported features error.
  mkfs.vfat -n boot $(partition_name "$1" 1)
  mkfs.ext4 -F -O ^has_journal -L root $(partition_name "$1" 2)
  mkfs.ext4 -F -O ^has_journal -L rw $(partition_name "$1" 3)
}

make_xu4_partitions() {
  if [ -z "$1" ]; then
    fatal "error: make_partitions requires a target device"
  fi

  dd if=/dev/zero of="$1" bs=1M count=100
  sync

  sleep 3

  parted --script "$1" mklabel msdos

  parted --script "$1" mkpart primary fat16 3072s 266239s
  parted --script "$1" set 1 lba off

  parted --script "$1" mkpart primary ext4 266240s 15624191s
  parted --script "$1" mkpart primary ext4 15624192s 100%

  sleep 3

  mkfs.vfat -n boot $(partition_name "$1" 1)
  mkfs.ext4 -F -L root $(partition_name "$1" 2)
  mkfs.ext4 -F -L rw $(partition_name "$1" 3)
}

generate_c1_boot_ini() {
    if [ -z "$1" ]; then
      fatal "error: missing target device"
    fi

    root_uuid=$(blkid -s UUID -o value $(partition_name "$1" 2))

    cat << EOF
ODROIDC-UBOOT-CONFIG

# Possible screen resolutions
# Uncomment only a single Line! The line with setenv written.
# At least one mode must be selected.

# setenv m "480x320p60hz"	# 480x320
# setenv m "480x800p60hz"	# 480x800
# setenv m "vga"          	# 640x480
# setenv m "480p"         	# 720x480
# setenv m "576p"         	# 720x576
# setenv m "800x480p60hz" 	# 800x480
# setenv m "800x600p60hz" 	# 800x600
# setenv m "1024x600p60hz"	# 1024x600
# setenv m "1024x768p60hz"	# 1024x768
# setenv m "1360x768p60hz" 	# 1360x768
# setenv m "1440x900p60hz"	# 1440x900
# setenv m "1600x900p60hz"	# 1600x900
# setenv m "1680x1050p60hz"	# 1680x1050
# setenv m "720p"         	# 720p 1280x720
# setenv m "800p"         	# 1280x800
# setenv m "sxga"         	# 1280x1024
# setenv m "1080i50hz"          # 1080I@50Hz
# setenv m "1080p24hz"          # 1080P@24Hz
# setenv m "1080p50hz"          # 1080P@50Hz
setenv m "1080p"                # 1080P@60Hz
# setenv m "1920x1200"    	# 1920x1200

# HDMI DVI Mode Configuration
setenv vout_mode "hdmi"
# setenv vout_mode "dvi"
# setenv vout_mode "vga"

# HDMI BPP Mode
setenv m_bpp "32"
# setenv m_bpp "24"
# setenv m_bpp "16"

# Monitor output
# Controls if HDMI PHY should output anything to the monitor
setenv monitor_onoff "false" # true or false

# HDMI Hotplug Force (HPD)
# 1 = Enables HOTPlug Detection
# 0 = Disables HOTPlug Detection and force the connected status
setenv hpd "0"

# CEC Enable/Disable (Requires Hardware Modification)
# 1 = Enables HDMI CEC
# 0 = Disables HDMI CEC
setenv cec "0"

# PCM5102 I2S Audio DAC
# PCM5102 is an I2S Audio Dac Addon board for ODROID-C1+
# Uncomment the line below to __ENABLE__ support for this Addon board.
# setenv enabledac "enabledac"

# UHS Card Configuration
# Uncomment the line below to __DISABLE__ UHS-1 MicroSD support
# This might break boot for some brand models of cards.
setenv disableuhs "disableuhs"

# Disable VPU (Video decoding engine, Saves RAM!!!)
# 0 = disabled
# 1 = enabled
setenv vpu "1"

# Disable HDMI Output (Again, saves ram!)
# 0 = disabled
# 1 = enabled
setenv hdmioutput "1"

# Default Console Device Setting
# setenv condev "console=ttyS0,115200n8"        # on serial port
# setenv condev "console=tty0"                    # on display (HDMI)
setenv condev "console=tty0 console=ttyS0,115200n8"   # on both

# Enable/Disable ODROID-VU7 Touchscreen
setenv disable_vu7 "false" # false

# CPU Max Frequency
# Possible Values: 96 192 312 408 504 600 720 816
# 1008 1200 1320 1488 1536 1632 1728 and 1824
setenv max_freq "1536"
# setenv max_freq "1632"
# setenv max_freq "1728"
# setenv max_freq "1824"

###########################################

if test "\${hpd}" = "0"; then setenv hdmi_hpd "disablehpd=true"; fi
if test "\${cec}" = "1"; then setenv hdmi_cec "hdmitx=cecf"; fi
if test "\${disable_vu7}" = "false"; then setenv hid_quirks "usbhid.quirks=0x0eef:0x0005:0x0004"; fi

# Boot Arguments
setenv bootargs "root=UUID=${root_uuid} rootwait ro \${condev} no_console_suspend fsck.repair=yes vdaccfg=0xa000 logo=osd1,loaded,0x7900000,720p,full dmfc=3 cvbsmode=576cvbs hdmimode=\${m} m_bpp=\${m_bpp} vout=\${vout_mode} \${disableuhs} \${hdmi_hpd} \${hdmi_cec} \${enabledac} monitor_onoff=\${monitor_onoff} max_freq=\${max_freq} \${hid_quirks} fsck.repair=yes net.ifnames=0"

# Booting
fatload mmc 0:1 0x21000000 uImage
fatload mmc 0:1 0x22000000 uInitrd
fatload mmc 0:1 0x21800000 meson8b_odroidc.dtb
fdt addr 21800000

if test "\${vpu}" = "0"; then fdt rm /mesonstream; fdt rm /vdec; fdt rm /ppmgr; fi

if test "\${hdmioutput}" = "0"; then fdt rm /mesonfb; fi

bootm 0x21000000 0x22000000 0x21800000"
EOF
}

generate_xu4_boot_ini() {
    if [ -z "$1" ]; then
      fatal "error: missing target device"
    fi

    root_uuid=$(blkid -s UUID -o value $(partition_name "$1" 2))

    cat << EOF
ODROIDXU-UBOOT-CONFIG

# U-Boot Parameters
setenv initrd_high "0xffffffff"
setenv fdt_high "0xffffffff"

# Mac address configuration
setenv macaddr "00:1e:06:61:7a:39"

# --- Screen Configuration for HDMI --- #
# ---------------------------------------
# Uncomment only ONE line! Leave all commented for automatic selection.
# Uncomment only the setenv line!
# ---------------------------------------
# ODROID-VU forced resolution
# setenv videoconfig "video=HDMI-A-1:1280x800@60"
# -----------------------------------------------
# ODROID-VU forced EDID
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1280x800.bin"
# -----------------------------------------------
# 1920x1200 60hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1200_60hz.bin"
# -----------------------------------------------
# 1920x1200 30hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1200_30hz.bin"
# -----------------------------------------------
# 1920x1080 (1080P) with monitor provided EDID information. (1080p-edid)
# setenv videoconfig "video=HDMI-A-1:1920x1080@60"
# -----------------------------------------------
# 1920x1080 (1080P) without monitor data using generic information (1080p-noedid)
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1080.bin"
# -----------------------------------------------
# 1920x1080 50hz (1080P) with monitor provided EDID information. (1080p 50hz-edid)
# setenv videoconfig "video=HDMI-A-1:1920x1080@50"
# -----------------------------------------------
# 1920x1080 50hz (1080P) without monitor data using generic information (1080p 50hz-noedid)
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1080_50hz.bin"
# -----------------------------------------------
# 1920x1080 24Hz (1080P) without monitor data using generic information (1080p 24hz-noedid)
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1080_24hz.bin"
# -----------------------------------------------
# 1920x1080 23.976Hz (1080P) without monitor data using generic information (1080p 23.976hz-noedid)
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1080_23_976hz.bin"
# -----------------------------------------------
# 1920x800 60hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x800.bin"
# -----------------------------------------------
# 1792x1344 60hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1792x1344.bin"
# -----------------------------------------------
# 1680x1050 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1680x1050.bin"
# -----------------------------------------------
# 1600x1200 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1600x1200.bin"
# -----------------------------------------------
# 1600x900 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1600x900.bin"
# -----------------------------------------------
# 1400x1050 60hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1400x1050.bin"
# -----------------------------------------------
# 1440x900 with monitor provided EDID information.
# setenv videoconfig "video=HDMI-A-1:1440x900@60"
# -----------------------------------------------
# 1440x900 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1440x900.bin"
# -----------------------------------------------
# 1366x768 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1366x768.bin"
# -----------------------------------------------
# 1360x768 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1360x768.bin"
# -----------------------------------------------
# 1280x1024 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1280x1024.bin"
# -----------------------------------------------
# 1280x768 60hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1280x768.bin"
# -----------------------------------------------
# 1280x720 (720P) with monitor provided EDID information. (720p-edid)
# setenv videoconfig "video=HDMI-A-1:1280x720@60"
# -----------------------------------------------
# 1280x720 (720P) without monitor data using generic information (720p-noedid)
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1280x720.bin"
# -----------------------------------------------
# 1152x864 75hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1152x864_75hz.bin"
# -----------------------------------------------
# 1024x768 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1024x768.bin"
# -----------------------------------------------
# 1024x600 without monitor data using generic information (ODROID VU7+)
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/1024x600.bin"
# -----------------------------------------------
# 800x600 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/800x600.bin"
# -----------------------------------------------
# 848x480 60hz without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/848x480.bin"
# -----------------------------------------------
# 800x480 without monitor data using generic information (ODROID 7")
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/800x480.bin"
# -----------------------------------------------
# 720x576 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/720x576.bin"
# -----------------------------------------------
# 720x480 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/720x480.bin"
# -----------------------------------------------
# 640x480 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/640x480.bin"
# -----------------------------------------------
# 480x800 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/480x800.bin"
# -----------------------------------------------
# 480x320 without monitor data using generic information
# setenv videoconfig "drm_kms_helper.edid_firmware=edid/480x320.bin"

# --- HDMI / DVI Mode Selection ---
# ------------------------------------------
# - HDMI Mode
setenv vout "hdmi"
# - DVI Mode (disables sound over HDMI as per DVI compat)
# setenv vout "dvi"

# --- HDMI CEC Configuration ---
# ------------------------------------------
setenv cecenable "false" # false or true
# set to true to enable HDMI CEC

# Enable/Disable ODROID-VU7 Touchsreen
setenv disable_vu7 "false" # false

# DRAM Frequency
# Sets the LPDDR3 memory frequency
# Supported values: 933 825 728 633 (MHZ)
setenv ddr_freq 825

# External watchdog board enable
setenv external_watchdog "false"
# debounce time set to 3 ~ 10 sec, default 3 sec
setenv external_watchdog_debounce "3"


#------------------------------------------------------------------------------
#
# HDMI Hot Plug detection
#
#------------------------------------------------------------------------------
#
# Forces the HDMI subsystem to ignore the check if the cable is connected or
# not.
# false : disable the detection and force it as connected.
# true : let cable, board and monitor decide the connection status.
#
# default: true
#
#------------------------------------------------------------------------------
setenv HPD "true"

#------------------------------------------------------------------------------------------------------
# Basic Ubuntu Setup. Don't touch unless you know what you are doing.
# --------------------------------
setenv bootrootfs "console=tty1 console=ttySAC2,115200n8 root=UUID=${root_uuid} rootwait ro fsck.repair=yes net.ifnames=0"


# Load kernel, initrd and dtb in that sequence
fatload mmc 0:1 0x40008000 zImage
fatload mmc 0:1 0x42000000 uInitrd

setenv fdtloaded "false"
if test "x\${board_name}" = "x"; then setenv board_name "xu4"; fi
if test "\${board_name}" = "xu4"; then fatload mmc 0:1 0x44000000 exynos5422-odroidxu4.dtb; setenv fdtloaded "true"; fi
if test "\${board_name}" = "xu3"; then fatload mmc 0:1 0x44000000 exynos5422-odroidxu3.dtb; setenv fdtloaded "true"; fi
if test "\${board_name}" = "xu3l"; then fatload mmc 0:1 0x44000000 exynos5422-odroidxu3-lite.dtb; setenv fdtloaded "true"; fi
if test "\${fdtloaded}" = "false"; then fatload mmc 0:1 0x44000000 exynos5422-odroidxu4.dtb; setenv fdtloaded "true"; fi

fdt addr 0x44000000

setenv hdmi_phy_control "HPD=\${HPD} vout=\${vout}"
if test "\${cecenable}" = "false"; then fdt rm /cec@101B0000; fi
if test "\${disable_vu7}" = "false"; then setenv hid_quirks "usbhid.quirks=0x0eef:0x0005:0x0004"; fi
if test "\${external_watchdog}" = "true"; then setenv external_watchdog "external_watchdog=\${external_watchdog} external_watchdog_debounce=\${external_watchdog_debounce}"; fi

# final boot args
setenv bootargs "\${bootrootfs} \${videoconfig} \${hdmi_phy_control} \${hid_quirks} smsc95xx.macaddr=\${macaddr} \${external_watchdog}"

# set DDR frequency
dmc \${ddr_freq}

# Boot the board
bootz 0x40008000 0x42000000 0x44000000
EOF
}

generate_fstab() {
    if [ -z "$1" ]; then
      fatal "error: missing target device"
    fi

    case "$2" in
        ro) root_mode="ro" ;;
        rw) root_mode="rw" ;;
        *) fatal "error: invalid root fs mode. must be ro or rw"
    esac

    boot_uuid=$(blkid -s UUID -o value $(partition_name "$1" 1))
    boot_type=$(blkid -s TYPE -o value $(partition_name "$1" 1))

    root_uuid=$(blkid -s UUID -o value $(partition_name "$1" 2))
    root_type=$(blkid -s TYPE -o value $(partition_name "$1" 2))

    rw_uuid=$(blkid -s UUID -o value $(partition_name "$1" 3))
    rw_type=$(blkid -s TYPE -o value $(partition_name "$1" 3))

    cat << EOF
UUID=${root_uuid}  /       ${root_type}    ${root_mode},nosuid,nodev,nofail,noatime,nodiratime            0 1
UUID=${rw_uuid}      /wagglerw       ${rw_type}    errors=remount-ro,noatime,nodiratime            0 1
UUID=${boot_uuid} /media/boot ${boot_type}  defaults,rw,owner,flush,umask=000 0 0
tmpfs   /tmp  tmpfs nodev,nosuid,mode=1777      0 0
EOF
}

model="$1"
basedir="$2"
device="$3"

case "$model" in
    nc) true ;;
    ep) true ;;
    *) usage ;;
esac

if [ -z "$device" ]; then
    usage
fi

log "partitioning disk"
case "$model" in
    nc) make_c1_partitions "$device" ;;
    ep) make_xu4_partitions "$device" ;;
esac

cleanup() {
    log "unmounting partitions"
    umount partitions/*
}

trap cleanup EXIT

mkdir -p partitions/boot partitions/root partitions/rw

log "mounting partitions"
mount $(partition_name "$device" 1) partitions/boot
mount $(partition_name "$device" 2) partitions/root
mount $(partition_name "$device" 3) partitions/rw

log "populating boot partition"
cp -a "$basedir"/boot/. partitions/boot

log "populating root partition"
cp -a "$basedir"/root/. partitions/root

log "populating rw partition"
cp -a "$basedir"/rw/. partitions/rw

log "sanitizing partitions"
(
cd partitions

if [ -d "root/var" ]; then
    log "relinking image /var"
    rm -rf root/wagglerw/var rw/var
    mkdir -p root/wagglerw/var rw/var
    cp -a root/var/. root/wagglerw/var/.
    rm -rf root/var
    ln -s /wagglerw/var root/var
else
    log "image /var ok"
fi

if [ -d "root/srv" ]; then
    log "relinking image /srv"
    rm -rf root/wagglerw/srv rw/srv
    mkdir -p root/wagglerw/srv rw/srv
    cp -a root/srv/. root/wagglerw/srv/.
    cp -a root/srv/. rw/srv/.
    rm -rf root/srv
    ln -s /wagglerw/srv root/srv
else
    log "image /srv ok"
fi

log "copy root/wagglerw to rw partition"
cp -a root/wagglerw/. rw

rm root/root/do_recovery root/wagglerw/do_recovery rw/do_recovery
)

log "generating boot.ini"
case "$model" in
    nc) generate_c1_boot_ini $device > partitions/boot/boot.ini ;;
    ep) generate_xu4_boot_ini $device > partitions/boot/boot.ini ;;
esac

log "generating fstab"
generate_fstab $device rw > partitions/root/etc/fstab
generate_fstab $device rw > partitions/root/etc/fstab_rw
generate_fstab $device ro > partitions/root/etc/fstab_ro

log "writing bootloader"

case "$model" in
    nc) (cd odroid_c1_uboot; ./sd_fusing.sh $device) ;;
    ep) (cd odroid_xu4_uboot; ./sd_fusing.sh $device) ;;
esac

sync
